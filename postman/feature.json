{
	"info": {
		"_postman_id": "b2e94f3f-aea6-4f99-80cc-4222661024f0",
		"name": "feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36787853"
	},
	"item": [
		{
			"name": "http://localhost:8080/admin/users",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\"exec\": [",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Status code is 201\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.have.status(201);\\r\",",
							"\t\t\t\t\t\t\t\"});\""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\n    {\n        \"email\": \"avak@mail.ru\",\n        \"name\": \"Иван Иванов\" \n    }\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				},
				"description": "Создание пользователя 1"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/admin/users",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"vasya@mail.ru\",\n    \"name\": \"Иван Васильев\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				},
				"description": "Создание пользователя 2"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/admin/categories",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Пятница\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/categories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"categories"
					]
				},
				"description": "Создание категории Пятница"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/users/1/events",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\"if(pm.response.to.have.status(201)) {\\r\",",
							"\t\t\t\t\t\t\t\"    var jsonData = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"    pm.environment.set(\\\"eventId\\\", jsonData.id);\\r\",",
							"\t\t\t\t\t\t\t\"    }\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"let serverResponse = pm.response; \\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Ответ должен содержать код статуса 201 и данные в формате json\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.have.status(201);  \\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.withBody;\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.json;\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"const body = pm.response.json(); \\r\",",
							"\t\t\t\t\t\t\t\"const target = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Событие должно содержать поля: annotation, category, location, description, title, eventDate\\\", function (){\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('annotation');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('category');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property(\\\"location\\\");\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('description');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('title');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('eventDate');\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Данные в ответе должны соответствовать данным в запросе\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target.id).to.not.be.null;\\r\",",
							"\t\t\t\t\t\t\t\"});\""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"annotation\": \"Краткое описание, которое не менее 20\",\n    \"category\": 1,\n    \"description\": \"еще одно описание, которое не менее 20 символов\",\n    \"eventDate\": \"2025-01-30 19:00:00\",\n    \"location\": {\"lat\":33.17,\"lon\":14.66},\n    \"paid\": true,\n    \"participantLimit\": 55,\n    \"title\": \"Нечто непонятное\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/1/events",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"1",
						"events"
					]
				},
				"description": "Создание события пользователем 1"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/admin/events/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\"if(pm.response.to.have.status(201)) {\\r\",",
							"\t\t\t\t\t\t\t\"    var jsonData = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"    pm.environment.set(\\\"eventId\\\", jsonData.id);\\r\",",
							"\t\t\t\t\t\t\t\"    }\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"let serverResponse = pm.response; \\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Ответ должен содержать код статуса 201 и данные в формате json\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.have.status(201);  \\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.withBody;\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.json;\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"const body = pm.response.json(); \\r\",",
							"\t\t\t\t\t\t\t\"const target = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Событие должно содержать поля: annotation, category, location, description, title, eventDate, publishedOn\\\", function (){\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('annotation');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('category');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property(\\\"location\\\");\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('description');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('title');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('eventDate');\\r\",",
							"                            \"    pm.expect(target).to.have.property('publishedOn');\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Данные в ответе должны соответствовать данным в запросе\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target.id).to.not.be.null;\\r\",",
							"\t\t\t\t\t\t\t\"});\""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"annotation\": \"Краткое описание, которое не менее 20\",\n    \"category\": 1,\n    \"description\": \"еще одно описание, которое не менее 20 символов\",\n    \"location\": {\"lat\": 33.17, \"lon\": 14.66},\n    \"paid\": true,\n    \"participantLimit\": 55,\n    \"requestModeration\": true,\n    \"title\": \"Нечто непонятное\",\n    \"eventDate\": \"2025-01-30 19:00:00\",\n    \"stateAction\": \"PUBLISH_EVENT\"\n}\n\n\n    \n    \n  \n   ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/events/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"events",
						"1"
					]
				},
				"description": "Публикация события"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/users/2/comments/events/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\"if(pm.response.to.have.status(201)) {\\r\",",
							"\t\t\t\t\t\t\t\"    var jsonData = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"    pm.environment.set(\\\"commentId\\\", jsonData.id);\\r\",",
							"\t\t\t\t\t\t\t\"    }\\r\",",
							"\t\t\t\t\t\t\t\"let serverResponse = pm.response; \\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Ответ должен содержать код статуса 201 и данные в формате json\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.have.status(201);  \\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.withBody;\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.json;\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"const body = pm.response.json(); \\r\",",
							"\t\t\t\t\t\t\t\"const target = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Комментарий должен содержать поля:  text, created, author\\\", function (){\\r\",",
							"\t\t\t\t\t\t\t\"    \\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('text');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('created');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('author');\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Данные в ответе должны соответствовать данным в запросе\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target.id).to.not.be.null;\\r\",",
							"\t\t\t\t\t\t\t\"});\""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Какую-то фигню запостили!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/2/comments/events/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"comments",
						"events",
						"1"
					]
				},
				"description": "Добавление комметария от пользователя 2 событию"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/user/2/comments/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\"let serverResponse = pm.response; \\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Ответ должен содержать код статуса 200 и данные в формате json\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.have.status(200);  \\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.withBody;\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.json;\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"const source = JSON.parse(pm.request.body.raw);\\r\",",
							"\t\t\t\t\t\t\t\"const target = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Комментарий должен содержать поля:text, created, author\\\", function (){\\r\",",
							"\t\t\t\t\t\t\t\"   pm.expect(target).to.have.property('text');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('created');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('author');\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Данные в ответе должны соответствовать данным в запросе\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target.id).to.not.be.null;\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target.text).equal(source.text, 'Обновленный комментарий должен соответствовать');\\r\",",
							"\t\t\t\t\t\t\t\"});\""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Какую-то фигню запостили! ну так\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/user/2/comments/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"user",
						"2",
						"comments",
						"1"
					]
				},
				"description": "Изменение комментария от пользователя 2 к событию 1"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/comment/events/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\"let serverResponse = pm.response;  \\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Ответ должен содержать код статуса 200 и данные в формате json\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.have.status(200);  \\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.withBody;\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.json;\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"const body = pm.response.json(); \\r\",",
							"\t\t\t\t\t\t\t\"const target = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Должны быть найдены коментарии у заданного события\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target.length).to.gte(0);\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"from\": 0,\n    \"size\": 10,\n    \"sort\": \"DESC\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/comment/events/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment",
						"events",
						"1"
					]
				},
				"description": "Получение всех комментариев к событию 1"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/users/2/comments/events/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\"let serverResponse = pm.response;  \\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Ответ должен содержать код статуса 200 и данные в формате json\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.have.status(200);  \\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.withBody;\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.json;\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"const body = pm.response.json(); \\r\",",
							"\t\t\t\t\t\t\t\"const target = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Должны быть найдены коментарии у заданного события\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target.length).to.gte(0);\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/comments/events/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"comments",
						"events",
						"1"
					]
				},
				"description": "Получение пользователем 2 своего комметария к событию 1"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/users/2/comments/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Ответ должен содержать код статуса 409\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.have.status(409);\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"const target = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Ошибка должна содержать поля: status\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('status');\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\"",
							"\t\t\t\t\t\t"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/comments/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"comments",
						"1"
					]
				},
				"description": "Удаление пользователем 2 своего комментария"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/users/1/comments/events/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"\t\t\t\t\t\t\t\"if(pm.response.to.have.status(201)) {\\r\",",
							"\t\t\t\t\t\t\t\"    var jsonData = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"    pm.environment.set(\\\"commentId\\\", jsonData.id);\\r\",",
							"\t\t\t\t\t\t\t\"    }\\r\",",
							"\t\t\t\t\t\t\t\"let serverResponse = pm.response; \\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Ответ должен содержать код статуса 201 и данные в формате json\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.have.status(201);  \\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.withBody;\\r\",",
							"\t\t\t\t\t\t\t\"    pm.response.to.be.json;\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"const body = pm.response.json(); \\r\",",
							"\t\t\t\t\t\t\t\"const target = pm.response.json();\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Комментарий должен содержать поля:  text, created, author\\\", function (){\\r\",",
							"\t\t\t\t\t\t\t\"    \\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('text');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('created');\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target).to.have.property('author');\\r\",",
							"\t\t\t\t\t\t\t\"});\\r\",",
							"\t\t\t\t\t\t\t\"\\r\",",
							"\t\t\t\t\t\t\t\"pm.test(\\\"Данные в ответе должны соответствовать данным в запросе\\\", function () {\\r\",",
							"\t\t\t\t\t\t\t\"    pm.expect(target.id).to.not.be.null;\\r\",",
							"\t\t\t\t\t\t\t\"});\"",
							"\t\t\t\t\t\t"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Новый комментарий запостился!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/1/comments/events/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"1",
						"comments",
						"events",
						"1"
					]
				},
				"description": "Комментарий 2 от пользователя 1 к событию 1"
			},
			"response": []
		}
	]
}